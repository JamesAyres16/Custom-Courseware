<% const uuid = Math.ceil(Math.random() * 2 ** 32)%>
<div id="ref-container-<%= uuid %>">
    <div class="my-3">
        <label class="form-label" for="ref-course-<%= uuid %>">
            Assigned Section
        </label>
        <select class="form-select" name="courseId" id="ref-course-<%= uuid %>" required></select>
    </div>  
    <div class="mb-3">
        <label class="form-label" for="ref-lesson-<%= uuid %>">
            Assigned Lesson
        </label>
        <select class="form-select" name="lessonId" id="ref-lesson-<%= uuid %>"></select> 
    </div>

    <div class="mb-3">
        <label class="form-label" for="ref-text-<%= uuid %>">Message</label>
        <input type="text" name="message" id="ref-text-<%= uuid %>" style="display: none;">
        <div id="ref-text-editor-<%= uuid %>" style="min-height: 30vh;"></div>
    </div>  
</div>

<script type="module">
    ;(async () => {
        let course_dropdown = document.getElementById("ref-course-<%= uuid %>");
        let lesson_dropdown = document.getElementById("ref-lesson-<%= uuid %>");
        const sleep = ms => new Promise(r => setTimeout(r, ms));
        while (typeof course_mapping == 'undefined' || !course_mapping) {
            await sleep(500);
        }

        course_dropdown.innerHTML = '';
        for (let course of course_mapping) {
            let option = document.createElement('option');
            option.value = course.id;
            option.innerText = course.name;
            course_dropdown.appendChild(option);
        }   

        function setLessons(course) {
            lesson_dropdown.innerHTML = ''
            // lessons not required so blank option is provided...
            lesson_dropdown.appendChild(
                document.createElement('option')
            );
            course.lessons.forEach(lesson => {
                console.log(lesson)
                let option = document.createElement('option');
                option.value = lesson.id;
                option.innerText = lesson.name;
                lesson_dropdown.appendChild(option);
            })
        }

        course_dropdown.addEventListener('change', () => {
            let course = course_mapping.find(
                course => course.id == +course_dropdown.value
            )
            setLessons(course)
        })

        let course = course_mapping.find(
            course => course.id == +course_dropdown.value
        )
        setLessons(course)


        // <% if (locals.component) { %>
            course_dropdown.value = '<%= component.reference.courseId %>'
        // <% } %>
        // <% if (locals.component?.reference?.lessonId) { %>
            lesson_dropdown.value = '<%= component.reference.lessonId %>'
        // <% } %>

        let quill = new Quill('#ref-text-editor-<%= uuid %>', {
            modules: {
                toolbar: [
                    [
                        { 'font': [] },
                        { 'size': [] }
                    ],
                    [
                        { 'color': [] }, { 'background': [] },
                        'bold', 'italic', 'underline', 'strike',
                    ],
                    [
                        { 'align': [] },
                        { 'indent': '-1'}, 
                        { 'indent': '+1' }
                    ],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    [{ 'script': 'sub'}, { 'script': 'super' }, 'formula']
                ]
            },
            placeholder: 'Type link message...',
            theme: 'snow' 
        });

        // comments are just to hide linting errors
        // do NOT delete
        //<% if (locals.component){ %>
            let delta = JSON.parse(String.raw`<%- component.reference.message %>`);
            quill.setContents(delta);
        //<% } %>

        const container = document.getElementById("ref-text-<%= uuid %>");
        container.value = JSON.stringify(quill.getContents());
        quill.on('text-change', (delta, oldDelta, source) => {
            container.value = JSON.stringify(quill.getContents());
        });
    })();
</script>